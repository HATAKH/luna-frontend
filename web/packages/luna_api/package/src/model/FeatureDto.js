/**
 * Luna API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import FeatureProviderDto from './FeatureProviderDto';
import IStringValueType from './IStringValueType';

/**
 * The FeatureDto model module.
 * @module model/FeatureDto
 * @version v1
 */
class FeatureDto {
    /**
     * Constructs a new <code>FeatureDto</code>.
     * @alias module:model/FeatureDto
     */
    constructor() { 
        
        FeatureDto.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>FeatureDto</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FeatureDto} obj Optional instance to populate.
     * @return {module:model/FeatureDto} The populated <code>FeatureDto</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FeatureDto();

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('value')) {
                obj['value'] = ApiClient.convertToType(data['value'], 'String');
            }
            if (data.hasOwnProperty('provider')) {
                obj['provider'] = FeatureProviderDto.constructFromObject(data['provider']);
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('valueType')) {
                obj['valueType'] = IStringValueType.constructFromObject(data['valueType']);
            }
            if (data.hasOwnProperty('depth')) {
                obj['depth'] = ApiClient.convertToType(data['depth'], 'Number');
            }
            if (data.hasOwnProperty('parentName')) {
                obj['parentName'] = ApiClient.convertToType(data['parentName'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {String} name
 */
FeatureDto.prototype['name'] = undefined;

/**
 * @member {String} displayName
 */
FeatureDto.prototype['displayName'] = undefined;

/**
 * @member {String} value
 */
FeatureDto.prototype['value'] = undefined;

/**
 * @member {module:model/FeatureProviderDto} provider
 */
FeatureDto.prototype['provider'] = undefined;

/**
 * @member {String} description
 */
FeatureDto.prototype['description'] = undefined;

/**
 * @member {module:model/IStringValueType} valueType
 */
FeatureDto.prototype['valueType'] = undefined;

/**
 * @member {Number} depth
 */
FeatureDto.prototype['depth'] = undefined;

/**
 * @member {String} parentName
 */
FeatureDto.prototype['parentName'] = undefined;






export default FeatureDto;

