/**
 * Luna API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CurrentUserDto model module.
 * @module model/CurrentUserDto
 * @version v1
 */
class CurrentUserDto {
    /**
     * Constructs a new <code>CurrentUserDto</code>.
     * @alias module:model/CurrentUserDto
     */
    constructor() { 
        
        CurrentUserDto.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CurrentUserDto</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CurrentUserDto} obj Optional instance to populate.
     * @return {module:model/CurrentUserDto} The populated <code>CurrentUserDto</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CurrentUserDto();

            if (data.hasOwnProperty('isAuthenticated')) {
                obj['isAuthenticated'] = ApiClient.convertToType(data['isAuthenticated'], 'Boolean');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('tenantId')) {
                obj['tenantId'] = ApiClient.convertToType(data['tenantId'], 'String');
            }
            if (data.hasOwnProperty('impersonatorUserId')) {
                obj['impersonatorUserId'] = ApiClient.convertToType(data['impersonatorUserId'], 'String');
            }
            if (data.hasOwnProperty('impersonatorTenantId')) {
                obj['impersonatorTenantId'] = ApiClient.convertToType(data['impersonatorTenantId'], 'String');
            }
            if (data.hasOwnProperty('impersonatorUserName')) {
                obj['impersonatorUserName'] = ApiClient.convertToType(data['impersonatorUserName'], 'String');
            }
            if (data.hasOwnProperty('impersonatorTenantName')) {
                obj['impersonatorTenantName'] = ApiClient.convertToType(data['impersonatorTenantName'], 'String');
            }
            if (data.hasOwnProperty('userName')) {
                obj['userName'] = ApiClient.convertToType(data['userName'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('surName')) {
                obj['surName'] = ApiClient.convertToType(data['surName'], 'String');
            }
            if (data.hasOwnProperty('email')) {
                obj['email'] = ApiClient.convertToType(data['email'], 'String');
            }
            if (data.hasOwnProperty('emailVerified')) {
                obj['emailVerified'] = ApiClient.convertToType(data['emailVerified'], 'Boolean');
            }
            if (data.hasOwnProperty('phoneNumber')) {
                obj['phoneNumber'] = ApiClient.convertToType(data['phoneNumber'], 'String');
            }
            if (data.hasOwnProperty('phoneNumberVerified')) {
                obj['phoneNumberVerified'] = ApiClient.convertToType(data['phoneNumberVerified'], 'Boolean');
            }
            if (data.hasOwnProperty('roles')) {
                obj['roles'] = ApiClient.convertToType(data['roles'], ['String']);
            }
        }
        return obj;
    }


}

/**
 * @member {Boolean} isAuthenticated
 */
CurrentUserDto.prototype['isAuthenticated'] = undefined;

/**
 * @member {String} id
 */
CurrentUserDto.prototype['id'] = undefined;

/**
 * @member {String} tenantId
 */
CurrentUserDto.prototype['tenantId'] = undefined;

/**
 * @member {String} impersonatorUserId
 */
CurrentUserDto.prototype['impersonatorUserId'] = undefined;

/**
 * @member {String} impersonatorTenantId
 */
CurrentUserDto.prototype['impersonatorTenantId'] = undefined;

/**
 * @member {String} impersonatorUserName
 */
CurrentUserDto.prototype['impersonatorUserName'] = undefined;

/**
 * @member {String} impersonatorTenantName
 */
CurrentUserDto.prototype['impersonatorTenantName'] = undefined;

/**
 * @member {String} userName
 */
CurrentUserDto.prototype['userName'] = undefined;

/**
 * @member {String} name
 */
CurrentUserDto.prototype['name'] = undefined;

/**
 * @member {String} surName
 */
CurrentUserDto.prototype['surName'] = undefined;

/**
 * @member {String} email
 */
CurrentUserDto.prototype['email'] = undefined;

/**
 * @member {Boolean} emailVerified
 */
CurrentUserDto.prototype['emailVerified'] = undefined;

/**
 * @member {String} phoneNumber
 */
CurrentUserDto.prototype['phoneNumber'] = undefined;

/**
 * @member {Boolean} phoneNumberVerified
 */
CurrentUserDto.prototype['phoneNumberVerified'] = undefined;

/**
 * @member {Array.<String>} roles
 */
CurrentUserDto.prototype['roles'] = undefined;






export default CurrentUserDto;

