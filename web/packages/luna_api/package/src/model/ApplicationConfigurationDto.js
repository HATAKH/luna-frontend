/**
 * Luna API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ApplicationAuthConfigurationDto from './ApplicationAuthConfigurationDto';
import ApplicationFeatureConfigurationDto from './ApplicationFeatureConfigurationDto';
import ApplicationGlobalFeatureConfigurationDto from './ApplicationGlobalFeatureConfigurationDto';
import ApplicationLocalizationConfigurationDto from './ApplicationLocalizationConfigurationDto';
import ApplicationSettingConfigurationDto from './ApplicationSettingConfigurationDto';
import ClockDto from './ClockDto';
import CurrentTenantDto from './CurrentTenantDto';
import CurrentUserDto from './CurrentUserDto';
import MultiTenancyInfoDto from './MultiTenancyInfoDto';
import ObjectExtensionsDto from './ObjectExtensionsDto';
import TimingDto from './TimingDto';

/**
 * The ApplicationConfigurationDto model module.
 * @module model/ApplicationConfigurationDto
 * @version v1
 */
class ApplicationConfigurationDto {
    /**
     * Constructs a new <code>ApplicationConfigurationDto</code>.
     * @alias module:model/ApplicationConfigurationDto
     */
    constructor() { 
        
        ApplicationConfigurationDto.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ApplicationConfigurationDto</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ApplicationConfigurationDto} obj Optional instance to populate.
     * @return {module:model/ApplicationConfigurationDto} The populated <code>ApplicationConfigurationDto</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ApplicationConfigurationDto();

            if (data.hasOwnProperty('localization')) {
                obj['localization'] = ApplicationLocalizationConfigurationDto.constructFromObject(data['localization']);
            }
            if (data.hasOwnProperty('auth')) {
                obj['auth'] = ApplicationAuthConfigurationDto.constructFromObject(data['auth']);
            }
            if (data.hasOwnProperty('setting')) {
                obj['setting'] = ApplicationSettingConfigurationDto.constructFromObject(data['setting']);
            }
            if (data.hasOwnProperty('currentUser')) {
                obj['currentUser'] = CurrentUserDto.constructFromObject(data['currentUser']);
            }
            if (data.hasOwnProperty('features')) {
                obj['features'] = ApplicationFeatureConfigurationDto.constructFromObject(data['features']);
            }
            if (data.hasOwnProperty('globalFeatures')) {
                obj['globalFeatures'] = ApplicationGlobalFeatureConfigurationDto.constructFromObject(data['globalFeatures']);
            }
            if (data.hasOwnProperty('multiTenancy')) {
                obj['multiTenancy'] = MultiTenancyInfoDto.constructFromObject(data['multiTenancy']);
            }
            if (data.hasOwnProperty('currentTenant')) {
                obj['currentTenant'] = CurrentTenantDto.constructFromObject(data['currentTenant']);
            }
            if (data.hasOwnProperty('timing')) {
                obj['timing'] = TimingDto.constructFromObject(data['timing']);
            }
            if (data.hasOwnProperty('clock')) {
                obj['clock'] = ClockDto.constructFromObject(data['clock']);
            }
            if (data.hasOwnProperty('objectExtensions')) {
                obj['objectExtensions'] = ObjectExtensionsDto.constructFromObject(data['objectExtensions']);
            }
            if (data.hasOwnProperty('extraProperties')) {
                obj['extraProperties'] = ApiClient.convertToType(data['extraProperties'], {'String': Object});
            }
        }
        return obj;
    }


}

/**
 * @member {module:model/ApplicationLocalizationConfigurationDto} localization
 */
ApplicationConfigurationDto.prototype['localization'] = undefined;

/**
 * @member {module:model/ApplicationAuthConfigurationDto} auth
 */
ApplicationConfigurationDto.prototype['auth'] = undefined;

/**
 * @member {module:model/ApplicationSettingConfigurationDto} setting
 */
ApplicationConfigurationDto.prototype['setting'] = undefined;

/**
 * @member {module:model/CurrentUserDto} currentUser
 */
ApplicationConfigurationDto.prototype['currentUser'] = undefined;

/**
 * @member {module:model/ApplicationFeatureConfigurationDto} features
 */
ApplicationConfigurationDto.prototype['features'] = undefined;

/**
 * @member {module:model/ApplicationGlobalFeatureConfigurationDto} globalFeatures
 */
ApplicationConfigurationDto.prototype['globalFeatures'] = undefined;

/**
 * @member {module:model/MultiTenancyInfoDto} multiTenancy
 */
ApplicationConfigurationDto.prototype['multiTenancy'] = undefined;

/**
 * @member {module:model/CurrentTenantDto} currentTenant
 */
ApplicationConfigurationDto.prototype['currentTenant'] = undefined;

/**
 * @member {module:model/TimingDto} timing
 */
ApplicationConfigurationDto.prototype['timing'] = undefined;

/**
 * @member {module:model/ClockDto} clock
 */
ApplicationConfigurationDto.prototype['clock'] = undefined;

/**
 * @member {module:model/ObjectExtensionsDto} objectExtensions
 */
ApplicationConfigurationDto.prototype['objectExtensions'] = undefined;

/**
 * @member {Object.<String, Object>} extraProperties
 */
ApplicationConfigurationDto.prototype['extraProperties'] = undefined;






export default ApplicationConfigurationDto;

