/**
 * Luna API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import FindTenantResultDto from '../model/FindTenantResultDto';
import RemoteServiceErrorResponse from '../model/RemoteServiceErrorResponse';

/**
* AbpTenant service.
* @module api/AbpTenantApi
* @version v1
*/
export default class AbpTenantApi {

    /**
    * Constructs a new AbpTenantApi. 
    * @alias module:api/AbpTenantApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the abpTenantFindTenantById operation.
     * @callback module:api/AbpTenantApi~abpTenantFindTenantByIdCallback
     * @param {String} error Error message, if any.
     * @param {module:model/FindTenantResultDto} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id 
     * @param {module:api/AbpTenantApi~abpTenantFindTenantByIdCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/FindTenantResultDto}
     */
    abpTenantFindTenantById(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling abpTenantFindTenantById");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth2'];
      let contentTypes = [];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = FindTenantResultDto;
      return this.apiClient.callApi(
        '/api/abp/multi-tenancy/tenants/by-id/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the abpTenantFindTenantByName operation.
     * @callback module:api/AbpTenantApi~abpTenantFindTenantByNameCallback
     * @param {String} error Error message, if any.
     * @param {module:model/FindTenantResultDto} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} name 
     * @param {module:api/AbpTenantApi~abpTenantFindTenantByNameCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/FindTenantResultDto}
     */
    abpTenantFindTenantByName(name, callback) {
      let postBody = null;
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling abpTenantFindTenantByName");
      }

      let pathParams = {
        'name': name
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth2'];
      let contentTypes = [];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = FindTenantResultDto;
      return this.apiClient.callApi(
        '/api/abp/multi-tenancy/tenants/by-name/{name}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
