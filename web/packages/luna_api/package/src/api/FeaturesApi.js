/**
 * Luna API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import GetFeatureListResultDto from '../model/GetFeatureListResultDto';
import RemoteServiceErrorResponse from '../model/RemoteServiceErrorResponse';
import UpdateFeaturesDto from '../model/UpdateFeaturesDto';

/**
* Features service.
* @module api/FeaturesApi
* @version v1
*/
export default class FeaturesApi {

    /**
    * Constructs a new FeaturesApi. 
    * @alias module:api/FeaturesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the featuresGet operation.
     * @callback module:api/FeaturesApi~featuresGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetFeatureListResultDto} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {String} opts.providerName 
     * @param {String} opts.providerKey 
     * @param {module:api/FeaturesApi~featuresGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetFeatureListResultDto}
     */
    featuresGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'providerName': opts['providerName'],
        'providerKey': opts['providerKey']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth2'];
      let contentTypes = [];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = GetFeatureListResultDto;
      return this.apiClient.callApi(
        '/api/feature-management/features', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the featuresUpdate operation.
     * @callback module:api/FeaturesApi~featuresUpdateCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {String} opts.providerName 
     * @param {String} opts.providerKey 
     * @param {module:model/UpdateFeaturesDto} opts.updateFeaturesDto 
     * @param {module:api/FeaturesApi~featuresUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     */
    featuresUpdate(opts, callback) {
      opts = opts || {};
      let postBody = opts['updateFeaturesDto'];

      let pathParams = {
      };
      let queryParams = {
        'providerName': opts['providerName'],
        'providerKey': opts['providerKey']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth2'];
      let contentTypes = ['application/json', 'text/json', 'application/*+json'];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/feature-management/features', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
