/**
 * Luna API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DateTimeFormatDto model module.
 * @module model/DateTimeFormatDto
 * @version v1
 */
class DateTimeFormatDto {
    /**
     * Constructs a new <code>DateTimeFormatDto</code>.
     * @alias module:model/DateTimeFormatDto
     */
    constructor() { 
        
        DateTimeFormatDto.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DateTimeFormatDto</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DateTimeFormatDto} obj Optional instance to populate.
     * @return {module:model/DateTimeFormatDto} The populated <code>DateTimeFormatDto</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DateTimeFormatDto();

            if (data.hasOwnProperty('calendarAlgorithmType')) {
                obj['calendarAlgorithmType'] = ApiClient.convertToType(data['calendarAlgorithmType'], 'String');
            }
            if (data.hasOwnProperty('dateTimeFormatLong')) {
                obj['dateTimeFormatLong'] = ApiClient.convertToType(data['dateTimeFormatLong'], 'String');
            }
            if (data.hasOwnProperty('shortDatePattern')) {
                obj['shortDatePattern'] = ApiClient.convertToType(data['shortDatePattern'], 'String');
            }
            if (data.hasOwnProperty('fullDateTimePattern')) {
                obj['fullDateTimePattern'] = ApiClient.convertToType(data['fullDateTimePattern'], 'String');
            }
            if (data.hasOwnProperty('dateSeparator')) {
                obj['dateSeparator'] = ApiClient.convertToType(data['dateSeparator'], 'String');
            }
            if (data.hasOwnProperty('shortTimePattern')) {
                obj['shortTimePattern'] = ApiClient.convertToType(data['shortTimePattern'], 'String');
            }
            if (data.hasOwnProperty('longTimePattern')) {
                obj['longTimePattern'] = ApiClient.convertToType(data['longTimePattern'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {String} calendarAlgorithmType
 */
DateTimeFormatDto.prototype['calendarAlgorithmType'] = undefined;

/**
 * @member {String} dateTimeFormatLong
 */
DateTimeFormatDto.prototype['dateTimeFormatLong'] = undefined;

/**
 * @member {String} shortDatePattern
 */
DateTimeFormatDto.prototype['shortDatePattern'] = undefined;

/**
 * @member {String} fullDateTimePattern
 */
DateTimeFormatDto.prototype['fullDateTimePattern'] = undefined;

/**
 * @member {String} dateSeparator
 */
DateTimeFormatDto.prototype['dateSeparator'] = undefined;

/**
 * @member {String} shortTimePattern
 */
DateTimeFormatDto.prototype['shortTimePattern'] = undefined;

/**
 * @member {String} longTimePattern
 */
DateTimeFormatDto.prototype['longTimePattern'] = undefined;






export default DateTimeFormatDto;

