/**
 * Luna API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import IdentityUserDto from '../model/IdentityUserDto';
import RegisterDto from '../model/RegisterDto';
import RemoteServiceErrorResponse from '../model/RemoteServiceErrorResponse';
import ResetPasswordDto from '../model/ResetPasswordDto';
import SendPasswordResetCodeDto from '../model/SendPasswordResetCodeDto';

/**
* Account service.
* @module api/AccountApi
* @version v1
*/
export default class AccountApi {

    /**
    * Constructs a new AccountApi. 
    * @alias module:api/AccountApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the accountRegister operation.
     * @callback module:api/AccountApi~accountRegisterCallback
     * @param {String} error Error message, if any.
     * @param {module:model/IdentityUserDto} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {module:model/RegisterDto} opts.registerDto 
     * @param {module:api/AccountApi~accountRegisterCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/IdentityUserDto}
     */
    accountRegister(opts, callback) {
      opts = opts || {};
      let postBody = opts['registerDto'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth2'];
      let contentTypes = ['application/json', 'text/json', 'application/*+json'];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = IdentityUserDto;
      return this.apiClient.callApi(
        '/api/account/register', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the accountResetPassword operation.
     * @callback module:api/AccountApi~accountResetPasswordCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {module:model/ResetPasswordDto} opts.resetPasswordDto 
     * @param {module:api/AccountApi~accountResetPasswordCallback} callback The callback function, accepting three arguments: error, data, response
     */
    accountResetPassword(opts, callback) {
      opts = opts || {};
      let postBody = opts['resetPasswordDto'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth2'];
      let contentTypes = ['application/json', 'text/json', 'application/*+json'];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/account/reset-password', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the accountSendPasswordResetCode operation.
     * @callback module:api/AccountApi~accountSendPasswordResetCodeCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {module:model/SendPasswordResetCodeDto} opts.sendPasswordResetCodeDto 
     * @param {module:api/AccountApi~accountSendPasswordResetCodeCallback} callback The callback function, accepting three arguments: error, data, response
     */
    accountSendPasswordResetCode(opts, callback) {
      opts = opts || {};
      let postBody = opts['sendPasswordResetCodeDto'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth2'];
      let contentTypes = ['application/json', 'text/json', 'application/*+json'];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/account/send-password-reset-code', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
