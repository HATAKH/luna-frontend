/**
 * Luna API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import GetPermissionListResultDto from '../model/GetPermissionListResultDto';
import RemoteServiceErrorResponse from '../model/RemoteServiceErrorResponse';
import UpdatePermissionsDto from '../model/UpdatePermissionsDto';

/**
* Permissions service.
* @module api/PermissionsApi
* @version v1
*/
export default class PermissionsApi {

    /**
    * Constructs a new PermissionsApi. 
    * @alias module:api/PermissionsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the permissionsGet operation.
     * @callback module:api/PermissionsApi~permissionsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetPermissionListResultDto} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {String} opts.providerName 
     * @param {String} opts.providerKey 
     * @param {module:api/PermissionsApi~permissionsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetPermissionListResultDto}
     */
    permissionsGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'providerName': opts['providerName'],
        'providerKey': opts['providerKey']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth2'];
      let contentTypes = [];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = GetPermissionListResultDto;
      return this.apiClient.callApi(
        '/api/permission-management/permissions', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the permissionsUpdate operation.
     * @callback module:api/PermissionsApi~permissionsUpdateCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {String} opts.providerName 
     * @param {String} opts.providerKey 
     * @param {module:model/UpdatePermissionsDto} opts.updatePermissionsDto 
     * @param {module:api/PermissionsApi~permissionsUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     */
    permissionsUpdate(opts, callback) {
      opts = opts || {};
      let postBody = opts['updatePermissionsDto'];

      let pathParams = {
      };
      let queryParams = {
        'providerName': opts['providerName'],
        'providerKey': opts['providerKey']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth2'];
      let contentTypes = ['application/json', 'text/json', 'application/*+json'];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/permission-management/permissions', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
